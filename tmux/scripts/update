#!/usr/bin/bash

# Check release
if [ ! -f /etc/arch-release ]; then
        exit 0
fi

# source variables
# scrDir="$HOME/.local/share/bin"
# source "$scrDir/globalcontrol"
get_aurhlpr()
{
        if pkg_installed yay; then
                aurhlpr="yay"
        elif pkg_installed paru; then
                aurhlpr="paru"
        fi
}

get_aurhlpr
export -f pkg_installed
fpk_exup="pkg_installed flatpak && flatpak update"

# Check for AUR updates
while true; do
        aur=$("${aurhlpr}" -Qua | wc -l)
        ofc=$(
                (while pgrep -x checkupdates >/dev/null; do sleep 1; done)
                checkupdates | wc -l
        )
        sleep 86400
done

# Check for flatpak updates
if pkg_installed flatpak; then
        fpk=$(flatpak remote-ls --updates | wc -l)
        fpk_disp="\n󰏓 Flatpak $fpk"
else
        fpk=0
        fpk_disp=""
fi

# Calculate total available updates
upd=$((ofc + aur + fpk))

[ "${1}" == upgrade ] && printf "[Official] %-10s\n[AUR]      %-10s\n[Flatpak]  %-10s\n" "$ofc" "$aur" "$fpk" && exit

# Show tooltip
if [ $upd -eq 0 ]; then
        upd="🬁 🬁 🬁"
        echo "{\"text\":\"$upd\"}"
elif [ $upd -lt 10 ]; then
        upd="🬁 🬁 🬓"
        echo "{\"text\":\"$upd\"}"
elif [ $upd -lt 20 ]; then
        upd="🬁 🬓 🬑"
        echo "{\"text\":\"$upd\"}"
elif [ $upd -lt 30 ]; then
        upd="🬓 🬁 🬑"
        echo "{\"text\":\"$upd\"}"
elif [ $upd -lt 40 ]; then
        upd="🬖 🬓 🬁"
        echo "{\"text\":\"$upd\"}"
elif [ $upd -lt 50 ]; then
        upd="🮋 🬓 🬄"
        echo "{\"text\":\"$upd\"}"
elif [ $upd -lt 60 ]; then
        upd="🮋 🬑 🬖"
        echo "{\"text\":\"$upd\"}"
elif [ $upd -lt 70 ]; then
        upd="🮋 🬖 🬄"
        echo "{\"text\":\"$upd\"}"
elif [ $upd -lt 80 ]; then
        upd="🮋 🮋 🬄"
        echo "{\"text\":\"$upd\"}"
elif [ $upd -lt 90 ]; then
        upd="🮋 🮋 🬑"
        echo "{\"text\":\"$upd\"}"
elif [ $upd -lt 100 ]; then
        upd="🮋 🮋 🮋"
        echo "{\"text\":\"$upd\"}"
else
        upd="🮋 🮋 🮋 🮋"
        echo "{\"text\":\"$upd\"}"
fi
